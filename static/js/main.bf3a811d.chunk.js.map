{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","helpers/getUserById.js","App.jsx","helpers/getCommentsById.js","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","getUserById","users","userId","find","App","postsFromServer","commentsFromServer","postId","usersFromServer","filter","ReactDOM","render","document","getElementById"],"mappings":"uz8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAACR,GACb,IAAQS,EAAOT,EAAPS,GAER,OACE,cAAC,EAAD,CAEET,QAASA,GADJS,UCRFC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBT,EAAgBS,EAAhBT,MAAOD,EAASU,EAATV,KAEf,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCHMW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAX,EAGEU,EAHFV,KACAI,EAEEM,EAFFN,SACAI,EACEE,EADFF,KAGF,OACE,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGFI,EAASQ,OACR,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,qCClCGS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCLzBS,EAAc,SAACC,EAAOC,GAAR,OACzBD,EAAME,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOW,MAAW,M,qBCQ/BE,EAAM,WACjB,IAAML,EAAQM,EAAgBf,KAAI,SAACK,GACjC,ICX4BW,EAAoBC,EDWxCL,EAAeP,EAAfO,OAAQX,EAAOI,EAAPJ,GAEhB,OAAO,YAAC,eAEDI,GAFP,IAGIF,KAAMO,EAAYQ,EAAiBN,GACnCb,UCjBwBiB,EDiBEA,ECjBkBC,EDiBEhB,EChBpDe,EAAmBG,QAAO,SAAA3B,GAAO,OAAIA,EAAQyB,SAAWA,WDqBxD,OACE,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAECa,EAAMF,OACL,cAAC,EAAD,CAAUE,MAAOA,IAEjB,0DEzBRW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bf3a811d.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo/CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map((comment) => {\n      const { id } = comment;\n\n      return (\n        <CommentInfo\n          key={id}\n          comment={comment}\n        />\n      );\n    })}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList/CommentList';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    comments,\n    user,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length ? (\n        <CommentList comments={comments} />\n      ) : (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","export const getUserById = (users, userId) => (\n  users.find(user => user.id === userId) || null\n);\n","import './App.scss';\nimport { PostList } from './components/PostList/PostList';\nimport { getUserById } from './helpers/getUserById';\nimport { getCommentsById } from './helpers/getCommentsById';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nexport const App = () => {\n  const posts = postsFromServer.map((post) => {\n    const { userId, id } = post;\n\n    return (\n      {\n        ...post,\n        user: getUserById(usersFromServer, userId),\n        comments: getCommentsById(commentsFromServer, id),\n      }\n    );\n  });\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n\n      {posts.length ? (\n        <PostList posts={posts} />\n      ) : (\n        <p>No posts at this time</p>\n      )}\n    </section>\n  );\n};\n","export const getCommentsById = (commentsFromServer, postId) => (\n  commentsFromServer.filter(comment => comment.postId === postId)\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}